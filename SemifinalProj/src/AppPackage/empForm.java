/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import static AppPackage.secForm.labId;
import com.sun.glass.events.KeyEvent;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author EmmanuelSal
 */
public class empForm extends javax.swing.JFrame {

    /**
     * Creates new form empForm
     */
    public empForm() {
     
        initComponents();
    }
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/LOG";
        String user = "spy";
        String pass = "123";
        DefaultTableModel dm;
        String filename = null;
        byte[] person_image = null;
        private byte[] picture;
        
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        labEmpId = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dateChoser = new datechooser.beans.DateChooserCombo();
        empMid = new javax.swing.JTextField();
        empFirst = new javax.swing.JTextField();
        empLast = new javax.swing.JTextField();
        empAdd = new javax.swing.JTextField();
        empBirth = new javax.swing.JTextField();
        empAge = new javax.swing.JTextField();
        empMob = new javax.swing.JTextField();
        empGen = new javax.swing.JComboBox<>();
        empType = new javax.swing.JComboBox<>();
        panelImg = new javax.swing.JPanel();
        img = new javax.swing.JLabel();
        btnUp = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        empId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnSearch = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        empUser = new javax.swing.JTextField();
        empPass = new javax.swing.JTextField();
        empQues = new javax.swing.JComboBox<>();
        empAns = new javax.swing.JTextField();
        btnLog = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        labEmpId.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        labEmpId.setForeground(new java.awt.Color(255, 255, 255));
        labEmpId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labEmpId.setText("Id Number");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labEmpId)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PERSONAL INFORMATION");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("FIRSTNAME:");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("MIDDLENAME:");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("LASTNAME:");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ADDRESS:");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BIRTHDATE:");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("AGE:");

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("GENDER:");

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CONTACT #:");

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("TYPE:");

        dateChoser.setCurrentView(new datechooser.view.appearance.AppearancesList("Grey",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChoser.setCalendarPreferredSize(new java.awt.Dimension(400, 180));
    dateChoser.setFormat(2);
    dateChoser.setFieldFont(new java.awt.Font("Comic Sans MS", java.awt.Font.BOLD, 11));
    dateChoser.addCommitListener(new datechooser.events.CommitListener() {
        public void onCommit(datechooser.events.CommitEvent evt) {
            dateChoserOnCommit(evt);
        }
    });

    empMid.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empMid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    empMid.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            empMidActionPerformed(evt);
        }
    });

    empFirst.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empFirst.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    empLast.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empLast.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    empAdd.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    empBirth.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empBirth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    empBirth.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            empBirthActionPerformed(evt);
        }
    });

    empAge.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empAge.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    empMob.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empMob.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    empMob.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            empMobActionPerformed(evt);
        }
    });

    empGen.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
    empGen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

    empType.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Cashier", "Staff" }));
    empType.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            empTypeFocusGained(evt);
        }
    });

    panelImg.setBackground(new java.awt.Color(0, 0, 0));
    panelImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

    img.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    img.setForeground(new java.awt.Color(255, 255, 255));
    img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    img.setText("PHOTO");

    javax.swing.GroupLayout panelImgLayout = new javax.swing.GroupLayout(panelImg);
    panelImg.setLayout(panelImgLayout);
    panelImgLayout.setHorizontalGroup(
        panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelImgLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    panelImgLayout.setVerticalGroup(
        panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelImgLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
            .addContainerGap())
    );

    btnUp.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    btnUp.setText("UPLOAD");
    btnUp.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUpActionPerformed(evt);
        }
    });

    btnCreate.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    btnCreate.setText("CREATE");
    btnCreate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnCreateActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jSeparator1)
                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(empFirst))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(empMid)
                                .addComponent(empLast)
                                .addComponent(empAdd)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(empBirth)
                                        .addComponent(dateChoser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(empAge)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(empGen, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(empMob)
                                .addComponent(empType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGap(0, 42, Short.MAX_VALUE)
                            .addComponent(btnCreate))
                        .addComponent(panelImg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(empFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(empMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(empLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addComponent(empAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(dateChoser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(empBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(empAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(empGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9)
                        .addComponent(empMob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(empType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(32, 32, 32))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnUp)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreate)
                    .addContainerGap())))
    );

    jPanel4.setBackground(new java.awt.Color(0, 0, 0));
    jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

    empId.setEditable(false);
    empId.setBackground(new java.awt.Color(0, 0, 0));
    empId.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
    empId.setForeground(new java.awt.Color(255, 255, 255));
    empId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    empId.setText("ID NUMBER");
    empId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {

        }
    ));
    jTable2.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
        public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
            jTable2MouseWheelMoved(evt);
        }
    });
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable2MouseClicked(evt);
        }
    });
    jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jTable2KeyReleased(evt);
        }
    });
    jScrollPane2.setViewportView(jTable2);

    btnSearch.setBackground(new java.awt.Color(0, 0, 0));
    btnSearch.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    btnSearch.setForeground(new java.awt.Color(255, 255, 255));
    btnSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    btnSearch.setText("Search Here");
    btnSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
    btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnSearchMouseClicked(evt);
        }
    });
    btnSearch.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSearchActionPerformed(evt);
        }
    });

    jButton2.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
    jButton2.setText("DELETE");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(empId, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2)))
            .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(empId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 75, Short.MAX_VALUE))
    );

    jButton1.setBackground(new java.awt.Color(255, 255, 255));
    jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    jButton1.setText("BACK");
    jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jPanel7.setBackground(new java.awt.Color(0, 0, 0));
    jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

    jLabel11.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(255, 255, 255));
    jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel11.setText("LOGIN INFORMATION");
    jLabel11.setToolTipText("");

    jLabel12.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(255, 255, 255));
    jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel12.setText("Desired Username:");

    jLabel13.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(255, 255, 255));
    jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel13.setText("Desired Password:");

    jLabel14.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    jLabel14.setForeground(new java.awt.Color(255, 255, 255));
    jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel14.setText("Security Question:");

    jLabel16.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    jLabel16.setForeground(new java.awt.Color(255, 255, 255));
    jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel16.setText("Your Answer:");

    empUser.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    empUser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            empUserActionPerformed(evt);
        }
    });

    empPass.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empPass.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    empQues.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
    empQues.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What's your fav color?", "Who is your ultimate crush?", "What's your fav food?" }));

    empAns.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    empAns.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    btnLog.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
    btnLog.setText("FINISH");
    btnLog.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLogActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(empPass, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(empQues, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(empUser, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addComponent(jLabel16)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(empAns, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                    .addComponent(btnLog)))
            .addGap(10, 10, 10))
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel11)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(empUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(empPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(empQues, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(28, 28, 28)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(empAns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(26, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLog)
                    .addContainerGap())))
    );

    lblTime.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
    lblTime.setForeground(new java.awt.Color(255, 255, 255));
    lblTime.setText("Time");

    lblDate.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
    lblDate.setForeground(new java.awt.Color(255, 255, 255));
    lblDate.setText("Date");

    jButton4.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
    jButton4.setText("REFRESH");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4))
                        .addComponent(lblTime)
                        .addComponent(lblDate)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(27, 27, 27)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton1))
                        .addComponent(jButton4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDate)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblTime)
                    .addContainerGap())
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 24, Short.MAX_VALUE))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

      void showDate2() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("EEEEEE, MMM dd yyyy");
        lblDate.setText(s.format(d));
    }

    void showTime2() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
       
        java.util.Date t = new java.util.Date();
        SimpleDateFormat d = new SimpleDateFormat("hh:mm:ss a");
        lblTime.setText(d.format(t));
            }
            
        }
        ).start();
        
    }
    public void LogUp() {
        String uname = empUser.getText();
        String upass = empPass.getText();
        String ques = (String) empQues.getSelectedItem();
        String ans = empAns.getText();
         
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure?","UPDATE", JOptionPane.YES_NO_OPTION);
        
         if(opt == 0) {
             if (uname.isEmpty() || 
                  upass.isEmpty() ||
                     ans.isEmpty()) {
                 
             }
             else {
                 try {
                       Class.forName(driver);
                                     Connection con = DriverManager.getConnection(url, user, pass);
                                     String value = (empId.getText());
            
                                     String sql = "UPDATE SPY.SEMISEC SET ID = ?, USERNAME = ?,PASSWORD = ?,QUESTON = ?,ANSWER = ?,TYPE = ? where ID = "+ value;
           
                                     PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, empId.getText());
                pst.setString(2, uname);
                pst.setString(3, upass);
                pst.setString(4, ques);
                pst.setString(5, ans);
                pst.setString(6, (String)empType.getSelectedItem());
                pst.execute();
                JOptionPane.showMessageDialog(this, "Updated Successfully!");
                fetch();
                clear();
                 }
                 catch (Exception e) {
                     
                 }
             }
        }
    }
     public void update()
        {
            String fname = empFirst.getText();
            String mname = empMid.getText();
            String lname = empLast.getText();
            String add = empAdd.getText();
            String bdate = empBirth.getText();
            String age = empAge.getText();
            String mob = empMob.getText();
        
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure?","UPDATE", JOptionPane.YES_NO_OPTION);
        if(opt == 0)
            {
                  if (img.getIcon() == null)
                    {
                        JOptionPane.showMessageDialog(null,"Please Choose your Avatar!");
                        Open();
                        return;   
                    }
        else if (fname.isEmpty() ||
                empId.getText().isEmpty() ||
                mname.isEmpty() || 
                lname.isEmpty() || 
                add.isEmpty() || 
                bdate.isEmpty() || 
                age.isEmpty() || 
                mob.isEmpty()) {
            
             JOptionPane.showMessageDialog(null, "Please Input Missing Fields");
        }               
       
                    else
                       {
                            try 
                                {
          
                                     Class.forName(driver);
                                     Connection con = DriverManager.getConnection(url, user, pass);
                                     String value = (empId.getText());
            
                                     String sql = "UPDATE SPY.EMP SET FIRSTNAME = ?,MIDDLENAME = ?,LASTNAME = ?,ADDRESS = ?,BIRTHDATE = ?,AGE = ? , GENDER = ?,MOBILE= ?,TYPE = ? where ID = "+ value;
           
                                     PreparedStatement pst = con.prepareStatement(sql); 
            
                pst.setString(1, empFirst.getText());
                pst.setString(2, empMid.getText());
                pst.setString(3, empLast.getText());
                pst.setString(4, empAdd.getText());
                pst.setString(5, empBirth.getText());
                pst.setString(6, empAge.getText());
                pst.setString(7, (String) empGen.getSelectedItem());
                pst.setString(8, empMob.getText());
                pst.setString(9,(String) empType.getSelectedItem());
                
                                       
                pst.execute();
                JOptionPane.showMessageDialog(this, "Updated Successfully!");                                       
                fetch(); 
                clear();
                pst.close();    
        
                                 }
      
                                     catch (Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, e);
                                        }  
          }
       }
        else
        {
            JOptionPane.showMessageDialog(null, "Denied by User..");
        }
 
    }
      public void upImg()
    {
      
            try
             
             {
                 
             Class.forName(driver);
             Connection con = DriverManager.getConnection(url, user, pass);
             String value = (empId.getText());
             Open();
             File file = new File (filename);
             FileInputStream fis = new FileInputStream(file);
             byte [] image = new byte[(int)file.length()];
             fis.read(image);
          
            String Isql = "UPDATE SPY.EMP SET IMAGE=? where ID = "+ value;
            
            PreparedStatement ipst = con.prepareStatement(Isql);
            ipst.setBytes(1,image);
            
            ipst.execute();
            JOptionPane.showMessageDialog(this, "Updated Successfully!");
       
            fetch(); 
            clear();
            ipst.close();  
             }
             catch(Exception f)
             {
                JOptionPane.showMessageDialog(this, f.getMessage());
             }
               
            
           
    }
    public void Open()
    {
       
       JFileChooser chooser = new JFileChooser();
       chooser.showOpenDialog(null);
       File f = chooser.getSelectedFile();
       filename = f.getAbsolutePath();
       ImageIcon imageIcon = new ImageIcon(new ImageIcon (filename).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_DEFAULT));
       img.setIcon(imageIcon);     
      
            try
                {
         
                    File image = new File (filename);
                    FileInputStream fis = new FileInputStream(image);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    byte[] buf = new byte[1024];
                    for (int readNum; (readNum = fis.read(buf)) !=-1;)
            
                        {
                        bos.write(buf , 0 ,readNum);
                        }
                       
                    person_image = bos.toByteArray();
                   
     
                }
                catch(IOException e)
             
                {
                        JOptionPane.showMessageDialog(null,e);
                }
       
          
    }
    public void Login() {
        
        String id = empId.getText();
        String uname = empUser.getText();
        String upass = empPass.getText();
        String ans = empAns.getText();
        String ques = (String) empQues.getSelectedItem();
        
        if (id.isEmpty() || 
            uname.isEmpty() || 
            upass.isEmpty() || 
            ans.isEmpty() ) {
            
            JOptionPane.showMessageDialog(null, "Please Input missing fields!!");
        }
        else {
            try {
                  Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                String sql = "Insert into SEMISEC"
                +"(ID,USERNAME,PASSWORD,QUESTON,ANSWER,TYPE)"
                +"values (?,?,?,?,?,?)";
                PreparedStatement pst = con.prepareStatement(sql);

        
                pst.setString(1, empId.getText());
                pst.setString(2, empUser.getText());
                pst.setString(3, empPass.getText());
                pst.setString(4, (String) empQues.getSelectedItem());
                pst.setString(5, empAns.getText());
                pst.setString(6, (String) empType.getSelectedItem());
       
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Success!");
                clear();
                pst.close();
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    public void clear() {
        empId.setText("");
        empFirst.setText("");
        empMid.setText("");
        empLast.setText("");
        empAdd.setText("");
        empBirth.setText("");
        empAge.setText("");
        empGen.setSelectedItem("Male");
        empMob.setText("");
        empType.setSelectedItem("Admin");
        img.setIcon(null);
        img.setText("Photo");
        btnCreate.setText("CREATE");
       
        dateChoser.setEnabled(true);
        btnLog.setText("FINISH");
        empQues.setSelectedItem("What's your fav color?");
        empUser.setText("");
        empPass.setText("");
        empAns.setText("");
        fetch();
    }
    public void fetch() {
        try
        {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "Select ID, FIRSTNAME, MIDDLENAME,LASTNAME,ADDRESS,BIRTHDATE,AGE,GENDER,MOBILE,TYPE from SPY.EMP ORDER BY ID ASC" ;
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
           
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());   
        }
    }
    
    public void getId() {
        try {
            int i = jTable2.getSelectedRow();
              TableModel model = jTable2.getModel();
               int row = jTable2.getSelectedRow();
            String value = jTable2.getValueAt(jTable2.getModel().getRowCount()-1, 0).toString();
            empId.setText(value);
            
        }
        catch(Exception e) {
            
        }
    }
    public void LoginTab() {
        try {
             int i = jTable2.getSelectedRow();
         
             TableModel model = jTable2.getModel();
            
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            int row = jTable2.getSelectedRow();
            String value = (jTable2.getModel().getValueAt(row, 0).toString());
            String Gsql = "SELECT * FROM SPY.SEMISEC where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(Gsql);
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                
                String id = rs.getString("ID");
                String uname = rs.getString("USERNAME");
                String upass = rs.getString("PASSWORD");
                String ques = rs.getString("QUESTON");
                String ans = rs.getString("ANSWER");
                
                empId.setText(id);
                empUser.setText(uname);
                empPass.setText(upass);
                empQues.setSelectedItem(ques);
                empAns.setText(ans);
            }
            
        }
        catch(Exception e) {
            
        }
    }
    public void move() {
         img.setText("");
   
        try
        {
         int i = jTable2.getSelectedRow();
        TableModel model = jTable2.getModel();
            
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            int row = jTable2.getSelectedRow();
            String value = (jTable2.getModel().getValueAt(row, 0).toString());
            
            
            String Gsql = "SELECT IMAGE FROM SPY.EMP where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(Gsql);
            ResultSet rs = pst.executeQuery(); 
                
           if(rs.next())
           {
                
                empId.setText(model.getValueAt(i,0).toString());
                empFirst.setText(model.getValueAt(i,1).toString());
                empMid.setText(model.getValueAt(i,2).toString());
                empLast.setText(model.getValueAt(i,3).toString());
                empAdd.setText(model.getValueAt(i,4).toString());
                empBirth.setText(model.getValueAt(i,5).toString());
                empAge.setText(model.getValueAt(i,6).toString());
                empGen.setSelectedItem(model.getValueAt(i,7).toString());
                empMob.setText(model.getValueAt(i,8).toString());
                empType.setSelectedItem(model.getValueAt(i,9).toString());
               
                byte [] image = rs.getBytes("IMAGE");  
                
                ImageIcon imageIcon = new ImageIcon(new ImageIcon (image).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_SMOOTH));
                img.setIcon(imageIcon);
                rs.close();
           }
           
           
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage()); 
        }
        
    }
    public void table() {
         try
        
         {
         
             int i = jTable2.getSelectedRow();
         
             TableModel model = jTable2.getModel();
            
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            int row = jTable2.getSelectedRow();
            String value = (jTable2.getModel().getValueAt(row, 0).toString());
            
            
            String Gsql = "SELECT IMAGE FROM SPY.EMP where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(Gsql);
            ResultSet rs = pst.executeQuery(); 
            
           
           
             if(rs.next())
           
             {
                
                empId.setText(model.getValueAt(i,0).toString());
                empFirst.setText(model.getValueAt(i,1).toString());
                empMid.setText(model.getValueAt(i,2).toString());
                empLast.setText(model.getValueAt(i,3).toString());
                empAdd.setText(model.getValueAt(i,4).toString());
                empBirth.setText(model.getValueAt(i,5).toString());
                empAge.setText(model.getValueAt(i,6).toString());
                empGen.setSelectedItem(model.getValueAt(i,7).toString());
                empMob.setText(model.getValueAt(i,8).toString());
                empType.setSelectedItem(model.getValueAt(i,9).toString());
               
                 byte [] image = rs.getBytes("IMAGE");  
                
                ImageIcon imageIcon = new ImageIcon(new ImageIcon (image).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_SMOOTH));
                img.setIcon(imageIcon);
                rs.close();
           }  
         
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e); 
        }
       

    }
    public void create() {
        String fname = empFirst.getText();
        String mname = empMid.getText();
        String lname = empLast.getText();
        String add = empAdd.getText();
        String bdate = empBirth.getText();
        String age = empAge.getText();
        String mob = empMob.getText();
      
        
        String sex = (String) empGen.getSelectedItem();
        String type = (String) empType.getSelectedItem();
     
        
        if (img.getIcon()== null)
        {
            JOptionPane.showMessageDialog(null,"Please Choose your Avatar!");
            Open();
           
        }
        else if (fname.isEmpty() || 
                mname.isEmpty() || 
                lname.isEmpty() || 
                add.isEmpty() || 
                bdate.isEmpty() || 
                age.isEmpty() || 
                mob.isEmpty()) {
            
             JOptionPane.showMessageDialog(null, "Please Input Missing Fields");
        }
        
        else {
            try
            {
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                String sql = "Insert into EMP"
                +"(FIRSTNAME,MIDDLENAME,LASTNAME,ADDRESS,BIRTHDATE,AGE,GENDER,MOBILE,TYPE,IMAGE)"
                +"values (?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement pst = con.prepareStatement(sql);

        
                pst.setString(1, empFirst.getText());
                pst.setString(2, empMid.getText());
                pst.setString(3, empLast.getText());
                pst.setString(4, empAdd.getText());
                pst.setString(5, empBirth.getText());
                pst.setString(6, empAge.getText());
                pst.setString(7, (String) empGen.getSelectedItem());
                pst.setString(8, empMob.getText());
                pst.setString(9,(String) empType.getSelectedItem());
                pst.setBytes(10,person_image);
                
                
                pst.executeUpdate();
                img.setText("");
                
                fetch();
                getId();
//clear();
               
                JOptionPane.showMessageDialog(this, "CREATE YOUR LOGIN CREDENTIALS..");
                empUser.grabFocus();
                pst.close();
            }
                catch (Exception ex)
                    {
                        JOptionPane.showMessageDialog(null, ex);
                    }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String id = labEmpId.getText();
    
        close();
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void empMidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empMidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empMidActionPerformed

    private void empBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empBirthActionPerformed

    private void empMobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empMobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empMobActionPerformed

    private void empUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empUserActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        showDate2();
        showTime2();
        fetch();
    }//GEN-LAST:event_formWindowOpened

    private void dateChoserOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChoserOnCommit
         DateFormat Fdate = dateChoser.getDateFormat();
        DateFormat r = new SimpleDateFormat("dd/MM/yy", Locale.getDefault());
        
        String s = String.valueOf(dateChoser.getText());
   
            empBirth.setText(s);
            dateChoser.setEnabled(false);
    }//GEN-LAST:event_dateChoserOnCommit

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        if (btnCreate.getText() == "UPDATE") {
            upImg();
        }
        else {
            img.setText("");
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon (filename).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_DEFAULT));
        img.setIcon(imageIcon);
        try
        {
            File image = new File (filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) !=-1;)
            {
                bos.write(buf , 0 ,readNum);

            }
            person_image = bos.toByteArray();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
           
        }
        }
        
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
      if (btnCreate.getText() == "CREATE") {
          create();
          
      }
      else {
          update();
      }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
         img.setText("");
         table();
         LoginTab();
         btnUp.show();
         btnCreate.setText("UPDATE");
         btnLog.setText("UPDATE");
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable2MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jTable2MouseWheelMoved
       
   move();
   LoginTab();
       
    }//GEN-LAST:event_jTable2MouseWheelMoved

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
         final int key = evt.getKeyCode();
        
        if (key == KeyEvent.VK_UP || key == KeyEvent.VK_DOWN
                || key == KeyEvent.VK_LEFT || key == KeyEvent.VK_RIGHT)
        {
          table ();
           LoginTab();
        }
    }//GEN-LAST:event_jTable2KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         int opt = JOptionPane.showConfirmDialog(null, "Are you sure?","Delete", JOptionPane.YES_NO_OPTION);
      if(opt == 0)
       {
        try
        {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String value = empId.getText();            
        
            String delsql = "DELETE FROM SPY.EMP where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(delsql);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Deleted!");
            clear();
            fetch();
            pst.close();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex.getMessage()); 
        }
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       clear();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        btnUp.hide();
    }//GEN-LAST:event_formWindowActivated

    private void empTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empTypeFocusGained
        btnUp.show();
    }//GEN-LAST:event_empTypeFocusGained

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
    
      if(btnLog.getText() == "UPDATE") {
          LogUp();
      }
      else {
           try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String id = empId.getText();
                String sql = "SELECT USERNAME FROM SPY.SEMISEC where ID =" + id ;
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                
                    if (rs.next()) {
                        
                       JOptionPane.showMessageDialog(null, "Username has already taken..");
                       rs.close();
                        
                    }
                    else {
                          Login();
                    }
           }
           catch (Exception e) {
               
           }
        
      }
    }//GEN-LAST:event_btnLogActionPerformed

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
      btnSearch.setText("");
    }//GEN-LAST:event_btnSearchMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed
     public void close()
      {
        this.setVisible(false);
        this.dispose();
      }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(empForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(empForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(empForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(empForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new empForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnLog;
    private javax.swing.JTextField btnSearch;
    private javax.swing.JButton btnUp;
    private datechooser.beans.DateChooserCombo dateChoser;
    private javax.swing.JTextField empAdd;
    private javax.swing.JTextField empAge;
    private javax.swing.JTextField empAns;
    private javax.swing.JTextField empBirth;
    private javax.swing.JTextField empFirst;
    private javax.swing.JComboBox<String> empGen;
    private javax.swing.JTextField empId;
    private javax.swing.JTextField empLast;
    private javax.swing.JTextField empMid;
    private javax.swing.JTextField empMob;
    private javax.swing.JTextField empPass;
    private javax.swing.JComboBox<String> empQues;
    private javax.swing.JComboBox<String> empType;
    private javax.swing.JTextField empUser;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable2;
    public static javax.swing.JLabel labEmpId;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel panelImg;
    // End of variables declaration//GEN-END:variables
}
