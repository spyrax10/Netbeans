
import com.sun.glass.events.KeyEvent;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;



/**
 *
 * @author EmmanuelSal
 */
public class Flog extends javax.swing.JFrame {
    
    
    /**
     * Creates new form Flog
     */
    public Flog() {
        initComponents();
    }
    
 String driver = "org.apache.derby.jdbc.ClientDriver";
    String url = "jdbc:derby://localhost:1527/LOG";
    String user = "spy";
    String pass = "123";
   // ResultSet rs = null;
    DefaultTableModel dm;
    String filename = null;
    byte[] person_image = null;
      boolean right, left;
    private Timer timer2;
    int startTime = 1 , s;
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    void showDate2() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("EEEEEE, MMM dd yyyy");
        lblDate.setText(s.format(d));
    }

    void showTime2() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
       
        Date t = new Date();
        SimpleDateFormat d = new SimpleDateFormat("hh:mm:ss a");
        lblTime.setText(d.format(t));
            }
            
        }
        ).start();
        
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        add = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        dateChoser = new datechooser.beans.DateChooserCombo();
        jLabel11 = new javax.swing.JLabel();
        tfNum = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        ag = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        sex = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        img = new javax.swing.JLabel();
        btnChose = new javax.swing.JButton();
        save = new javax.swing.JButton();
        tfBdate = new javax.swing.JTextField();
        cour = new javax.swing.JTextField();
        cour1 = new javax.swing.JComboBox<>();
        btnRefresh = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        del = new javax.swing.JButton();
        Bsearch = new javax.swing.JTextField();
        combo1 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        text = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);
        setOpacity(0.0F);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 255, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("PERSONAL INFORMATION");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("First Name:");

        fname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        fname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fnameMouseClicked(evt);
            }
        });
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fnameKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Middle Name:");

        mname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mnameKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Last Name:");

        lname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnameActionPerformed(evt);
            }
        });
        lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lnameKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Address:");

        add.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        add.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addFocusGained(evt);
            }
        });
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Birthdate:");

        dateChoser.setCalendarPreferredSize(new java.awt.Dimension(400, 180));
        dateChoser.setFormat(2);
        dateChoser.setFieldFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 11));
        dateChoser.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateChoserOnCommit(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("Mobile:");

        tfNum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tfNum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfNum.setToolTipText("\"Must start with a number\"");
        tfNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNumKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNumKeyTyped(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Age:");

        ag.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ag.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                agKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Gender:");

        sex.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sex.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sexKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sexKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Course:");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/index.jpg"))); // NOI18N
        img.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnChose.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnChose.setText("CHOOSE IMAGE");
        btnChose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoseActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        save.setText("CREATE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        tfBdate.setEditable(false);
        tfBdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tfBdate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfBdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfBdateFocusGained(evt);
            }
        });

        cour.setEditable(false);
        cour.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cour.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                courFocusGained(evt);
            }
        });
        cour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                courKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                courKeyTyped(evt);
            }
        });

        cour1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cour1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course--", "Bachelor of Science in Computer Science", "Bachelor of Science in Computer Engineering", "Bachelor of Science in Information Technology" }));
        cour1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cour1ActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnRefresh.setText("REFRESH");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateChoser, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sex, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfNum, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ag, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(fname)
                                                .addComponent(mname)
                                                .addComponent(lname)
                                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(tfBdate, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cour1, 0, 277, Short.MAX_VALUE)
                                    .addComponent(cour))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnChose, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRefresh)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(mname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(tfBdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateChoser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(tfNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChose))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cour1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDate.setText("Date");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("QUIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTime.setText("Time");

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 2));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(51, 51, 255));
        jTable1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jTable1MouseWheelMoved(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("ID Number:");

        id.setEditable(false);
        id.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idMouseClicked(evt);
            }
        });
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idKeyPressed(evt);
            }
        });

        del.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        del.setText("DELETE");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        Bsearch.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        Bsearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Bsearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BsearchFocusGained(evt);
            }
        });
        Bsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BsearchMouseClicked(evt);
            }
        });
        Bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsearchActionPerformed(evt);
            }
        });
        Bsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BsearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BsearchKeyTyped(evt);
            }
        });

        combo1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search By...", "Lastname", "Firstname", "ID" }));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(del))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 111, Short.MAX_VALUE)
                        .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Bsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(del))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        text.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        text.setForeground(new java.awt.Color(102, 255, 0));
        text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        text.setText(" SPYRAXAPP ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTime)
                            .addComponent(lblDate)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lblDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    
 //   private final Font font;
    private boolean isNumber(char ch)
    {
        return ch>= '0' && ch <= '9';
    }
    
    private byte[] picture;
   
     public void run()
    {
               int speed = 10;
               
               
              ActionListener action2 = new ActionListener()
                {
                    @Override
                    public void actionPerformed (ActionEvent evt)
                    {
     
                            int x = text.getX();   
                            int y = text.getY();
                            int h = text.getHeight();
                            int w = text.getWidth();
                    
                    
                    
                         if ( x <= 242)
                            {
                            
                                x++;
                                text.setBounds(x,y,w,h);
                                                  
                            }
                         else if (x >= 242)
                         {
                             
                              x--;
                              x= 0;
                              text.setBounds(x,y,w,h);
                         }
                  
                        else
                            {
                               //x = 0;
                                
                          // text.setBounds(x,y,w,h);
                            

                       }
                             
                               
                    }
                };
        
        timer2 = new Timer(speed,action2);
        timer2.start();
        
           
      
    }
    public void upImg()
    {
      
            try
             
             {
                 
             Class.forName(driver);
             Connection con = DriverManager.getConnection(url, user, pass);
             String value = (id.getText());
             Open();
             File file = new File (filename);
             FileInputStream fis = new FileInputStream(file);
             byte [] image = new byte[(int)file.length()];
             fis.read(image);
          
            String Isql = "UPDATE LOG1 SET IMAGE=? where ID = "+ value;
            
            PreparedStatement ipst = con.prepareStatement(Isql);
            ipst.setBytes(1,image);
            
            ipst.execute();
            JOptionPane.showMessageDialog(this, "Updated Successfully!");
            save.setText("CREATE");
            fname.grabFocus();
            fetch(); 
            clear();
            ipst.close();  
             }
             catch(Exception f)
             {
                JOptionPane.showMessageDialog(this, f.getMessage());
             }
               
            
           
    }
    public void animation()
    
      {
         for(double i = 0.0; i <= 1.0; i = i + 0.1)
        {
            String val = i + "F";
            float f = Float.valueOf(val);
            
            this.setOpacity(f);
            
            try
            {
                Thread.sleep(100);
            }
            catch (Exception e)
            {
                
            }
            
            
            
        }
    }
    public void update()
    {
      
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure?","UPDATE", JOptionPane.YES_NO_OPTION);
        if(opt == 0)
            {
                  if (img.getIcon() == null)
                    {
                        JOptionPane.showMessageDialog(null,"Please Choose your Avatar!");
                        Open();
                        return;   
                    }
                    else if(id.getText().isEmpty() || fname.getText().isEmpty() || mname.getText().isEmpty() || lname.getText().isEmpty() || add.getText().isEmpty() || sex.getText().isEmpty() || ag.getText().isEmpty() || cour.getText().isEmpty() || tfNum.getText().isEmpty() || tfBdate.getText().isEmpty() )
                        {
                            JOptionPane.showMessageDialog(null,"Please Input Missing Fields!");
                            return;
                         }
       
                    else
                       {
                            try 
                                {
          
                                     Class.forName(driver);
                                     Connection con = DriverManager.getConnection(url, user, pass);
                                     String value = (id.getText());
            
                                     String sql = "UPDATE LOG1 SET FIRSTNAME = ?,MIDDLENAME = ?,LASTNAME = ?,ADDRESS = ?,GENDER = ?,AGE = ? , BDATE = ?,MOBILE= ?,COURSE = ? where ID = "+ value;
           
                                     PreparedStatement pst = con.prepareStatement(sql); 
            
           
                                        pst.setString(1,fname.getText());
                                        pst.setString(2,mname.getText());
                                        pst.setString(3,lname.getText());
                                        pst.setString(4,add.getText());
                                        pst.setString(5,sex.getText());
                                        pst.setString(6,ag.getText());
                                        pst.setString(7,tfBdate.getText());
                                        pst.setString(8,tfNum.getText());
                                        pst.setString(9,cour.getText());
                                        pst.execute();
                                        pst.execute();
                                        JOptionPane.showMessageDialog(this, "Updated Successfully!");
                                        save.setText("CREATE");
                                        fname.grabFocus();
                                        fetch(); 
                                        clear();
                                        pst.close();    
        
                                 }
      
                                     catch (Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, e);
                                        }  
          }
       }
        else
        {
            JOptionPane.showMessageDialog(null, "Denied by User..");
        }
 
    }
    
    public void table()
    {
      
         try
        
         {
         
             int i = jTable1.getSelectedRow();
         
             TableModel model = jTable1.getModel();
            
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            int row = jTable1.getSelectedRow();
            String value = (jTable1.getModel().getValueAt(row, 0).toString());
            
            
            String Gsql = "SELECT IMAGE FROM LOG1 where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(Gsql);
            ResultSet rs = pst.executeQuery(); 
           
           
             if(rs.next())
           
             {
                
                id.setText(model.getValueAt(i,0).toString());
                fname.setText(model.getValueAt(i,1).toString());
                mname.setText(model.getValueAt(i,2).toString());
                lname.setText(model.getValueAt(i,3).toString());
                add.setText(model.getValueAt(i,4).toString());
                sex.setText(model.getValueAt(i,5).toString());
                ag.setText(model.getValueAt(i,6).toString());
                tfBdate.setText(model.getValueAt(i,7).toString());
                tfNum.setText(model.getValueAt(i,8).toString());
                cour.setText(model.getValueAt(i,9).toString());
               
                 byte [] image = rs.getBytes("IMAGE");  
                
                ImageIcon imageIcon = new ImageIcon(new ImageIcon (image).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_SMOOTH));
                img.setIcon(imageIcon);
               
                
               
                rs.close();
           }  
         
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e); 
        }
    }
    public void Open()
    {
        int p = 0 ;
      
        
       JFileChooser chooser = new JFileChooser();
       chooser.showOpenDialog(null);
       File f = chooser.getSelectedFile();
       filename = f.getAbsolutePath();
       ImageIcon imageIcon = new ImageIcon(new ImageIcon (filename).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_DEFAULT));
       img.setIcon(imageIcon);
    
      
            
      
            try
                
                {
         
                    File image = new File (filename);
                    FileInputStream fis = new FileInputStream(image);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    byte[] buf = new byte[1024];
                    for (int readNum; (readNum = fis.read(buf)) !=-1;)
            
                        {
                        bos.write(buf , 0 ,readNum);
                        }
                       
                    person_image = bos.toByteArray();
                   
     
                }
                catch(IOException e)
             
                {
                        JOptionPane.showMessageDialog(null,e);
                }
            
    
    
       
          
    }
    public void Image()
    {
        try
        {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            filename = f.getAbsolutePath();
            ImageIcon imageIcon = new ImageIcon(new ImageIcon (filename).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_SMOOTH));
            img.setIcon(imageIcon);      
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }
    public void fetch()
    {
        try
        {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "Select ID, FIRSTNAME, MIDDLENAME,LASTNAME,ADDRESS,GENDER,AGE,BDATE,MOBILE,COURSE from LOG1 ORDER BY ID ASC" ;
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
           
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());   
        } 
    }
    public void clear()
    {
        id.setText("");
        fname.setText("");
        mname.setText("");
        lname.setText("");
        add.setText("");
        sex.setText("");
        ag.setText("");
        cour.setText("");
        img.setIcon(null);
        Bsearch.setText("");
        tfNum.setText("");
        tfBdate.setText("");
        combo1.setSelectedItem("Search By...");
        cour1.setSelectedItem("Select Course--");
        btnChose.hide();
        Default();
        dateChoser.setEnabled(false);
        cour1.setEnabled(false);
        img.setText("");
    }
    public void Default()
    {
            File file = new File("C:\\Users\\EmmanuelSal\\Documents\\NetBeansProjects\\loginForm\\src\\Img\\index.jpg");
            filename = file.getAbsolutePath();
            ImageIcon imageIcon = new ImageIcon(new ImageIcon (filename).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_SMOOTH));
            img.setIcon(imageIcon);
          
    }
   
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (save.getText() == "CREATE")
        {
               create();
        }
        else
        {
            update();
        }
        
       
           
    }//GEN-LAST:event_saveActionPerformed
   
   
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
         dateChoser.setEnabled(false);
        animation();
       fetch();
      
      
    }//GEN-LAST:event_formWindowOpened

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        
           
      int opt = JOptionPane.showConfirmDialog(null, "Are you sure?","Delete", JOptionPane.YES_NO_OPTION);
      if(opt == 0)
       {
        try
        {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String value = id.getText();     
            String delsql = "DELETE FROM LOG1 where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(delsql);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Deleted!");
            clear();
            fetch();
            pst.close();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex.getMessage()); 
        }
       }
    }//GEN-LAST:event_delActionPerformed
    
    public void create()
    {
    
           
                   
        if (img.getIcon()== null)
        {
            JOptionPane.showMessageDialog(null,"Please Choose your Avatar!");
            Open();
           
        }
      
        else if( cour.getText().isEmpty() || fname.getText().isEmpty() || mname.getText().isEmpty() || lname.getText().isEmpty() || add.getText().isEmpty() || sex.getText().isEmpty() || ag.getText().isEmpty() || tfNum.getText().isEmpty() || tfBdate.getText().isEmpty()|| tfNum.getText().isEmpty() || tfBdate.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please Input Missing Fields!");
            fname.setToolTipText("Please enter some text here");
            return;
        }
        
       
        else
        {
            img.setText("");
            try
            {
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                String sql = "insert into LOG1"
                +"(FIRSTNAME,MIDDLENAME,LASTNAME,ADDRESS,GENDER,AGE,BDATE,MOBILE,COURSE,IMAGE)"
                +"values (?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement pst = con.prepareStatement(sql);

        
                pst.setString(1,fname.getText());
                pst.setString(2,mname.getText());
                pst.setString(3,lname.getText());
                pst.setString(4,add.getText());
                pst.setString(5,sex.getText());
                pst.setString(6,ag.getText());
                pst.setString(7,tfBdate.getText());
                pst.setString(8,tfNum.getText());
                pst.setString(9,(String) cour1.getSelectedItem());
                pst.setBytes(10,person_image);
                pst.executeUpdate();
                img.setText("");
                JOptionPane.showMessageDialog(this, "Success!");
                btnChose.hide();  
                fetch();
                clear();
                pst.close();
            }
                catch (Exception ex)
                    {
            
                    } 
        }
    }
    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        
    
                
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        table();
        btnChose.show();
        btnChose.setText("UPDATE PHOTO");
        save.setText("UPDATE");
        img.setText("");
        dateChoser.show();
       
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyPressed
       
        JOptionPane.showMessageDialog(null ,"Can't be edited!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_idKeyPressed

    private void agKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agKeyPressed
        
        char c = evt.getKeyChar();
        if(!(((c >= '0') && (c <= '9'))
                || (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE))) {
            
             getToolkit().beep();
             JOptionPane.showMessageDialog(null ,"Numbers only!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);
             ag.grabFocus();
             ag.setText("");
            
             
             //evt.consume();
        }
    
    }//GEN-LAST:event_agKeyPressed

    private void BsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BsearchKeyTyped
        
    }//GEN-LAST:event_BsearchKeyTyped

    private void BsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BsearchKeyReleased
       
       
    
         String search = Bsearch.getText();
        if (combo1.getSelectedItem() == "ID")
         
        {
              
            try
          
            {
            
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
            
                String rsql = "SELECT * FROM LOG1 WHERE ID=?"; //LIKE '%" + search + "%'";
                PreparedStatement pst = con.prepareStatement(rsql);
                pst.setString(1,Bsearch.getText());
                ResultSet rs = pst.executeQuery(); 
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
             }
       
            catch(Exception e)
       
            {
            
       
            }
    
        }
        
        else if (combo1.getSelectedItem() == "Lastname")
            
        {
              
            try
                {
                    Class.forName(driver);
                    Connection con = DriverManager.getConnection(url, user, pass);
                    String Ssql = "SELECT * FROM LOG1 WHERE LASTNAME LIKE '%" + search + "%'";
                    PreparedStatement pst = con.prepareStatement(Ssql);
                    ResultSet rs = pst.executeQuery();
           
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
             
                    rs.close();
                }
            catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this,"Empty");
                }  
        }
    
        else if (combo1.getSelectedItem() == "Firstname")
    
        {
            try
       
            {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String Ssql = "SELECT * FROM LOG1 WHERE FIRSTNAME LIKE '%" + search + "%'";
            PreparedStatement pst = con.prepareStatement(Ssql);
            ResultSet rs = pst.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();
       
            }
       
            catch(Exception e)
       
            {
            
                JOptionPane.showMessageDialog(this,"Empty");
       
            }
        
    }
       
    }//GEN-LAST:event_BsearchKeyReleased

    private void BsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BsearchMouseClicked
        
        if (combo1.getSelectedItem() == "Search By...")
        {
            Bsearch.setText("INVALID!!");
            Bsearch.setEnabled(false);
        }
        else
        {
            Bsearch.setEnabled(true);
            Bsearch.grabFocus();
            
        
            Bsearch.setText("");
            Font f = new Font("Tahoma",Font.BOLD,14);
            Bsearch.setFont(f); 
        }
       
        
    }//GEN-LAST:event_BsearchMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        showDate2();
        showTime2();
        btnChose.hide();
        cour1.setEnabled(false);
      
    }//GEN-LAST:event_formWindowActivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnameKeyTyped
        
        char c = evt.getKeyChar();
        if(!(((Character.isLetter(c)))
                || (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE)
                || (c == KeyEvent.VK_MINUS))) {
            
             getToolkit().beep();
             JOptionPane.showMessageDialog(null ,"Letters Only!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);
             fname.setText("");
             fname.grabFocus();
             evt.consume();
        }
    }//GEN-LAST:event_fnameKeyTyped

    private void mnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnameKeyTyped
       char c = evt.getKeyChar();
        if(!(((Character.isLetter(c)))
                || (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE))) {
            
             getToolkit().beep();
             JOptionPane.showMessageDialog(null ,"Letters Only!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE); 
             mname.setText("");
             mname.grabFocus();
             evt.consume();
        }
    }//GEN-LAST:event_mnameKeyTyped

    private void lnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnameKeyTyped
        char c = evt.getKeyChar();
        if(!(((Character.isLetter(c)))
                || (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE))) {
            
             getToolkit().beep();
             JOptionPane.showMessageDialog(null ,"Letters Only!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);
             lname.setText("");
             lname.grabFocus();
             evt.consume();
        }
    }//GEN-LAST:event_lnameKeyTyped

    private void sexKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sexKeyTyped
       char c = evt.getKeyChar();
        if(!(((Character.isLetter(c)))
                || (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE))) {
            
             getToolkit().beep();
             JOptionPane.showMessageDialog(null ,"Letters Only!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);
             sex.setText("");
             sex.grabFocus();
             evt.consume();
        }
    }//GEN-LAST:event_sexKeyTyped

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        save.setText("CREATE");
        fetch();
        clear();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void jTable1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jTable1MouseWheelMoved
cour1.enable(true);
        img.setText("");
        try
        {
         int i = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
            
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            int row = jTable1.getSelectedRow();
            String value = (jTable1.getModel().getValueAt(row, 0).toString());
            
            
            String Gsql = "SELECT IMAGE FROM LOG1 where ID =" + value ;
            PreparedStatement pst = con.prepareStatement(Gsql);
            ResultSet rs = pst.executeQuery(); 
                
           if(rs.next())
           {
          
                id.setText(model.getValueAt(i,0).toString());
                fname.setText(model.getValueAt(i,1).toString());
                mname.setText(model.getValueAt(i,2).toString());
                lname.setText(model.getValueAt(i,3).toString());
                add.setText(model.getValueAt(i,4).toString());
                sex.setText(model.getValueAt(i,5).toString());
                ag.setText(model.getValueAt(i,6).toString());
                tfBdate.setText(model.getValueAt(i,7).toString());
                tfNum.setText(model.getValueAt(i,8).toString());
                cour.setText(model.getValueAt(i,9).toString());
               
                byte [] image = rs.getBytes("IMAGE");  
                
                ImageIcon imageIcon = new ImageIcon(new ImageIcon (image).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_SMOOTH));
                img.setIcon(imageIcon);
                rs.close();
           }
           
           
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage()); 
        }
    }//GEN-LAST:event_jTable1MouseWheelMoved

    private void idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idMouseClicked
       JOptionPane.showMessageDialog(null ,"Can't be edited!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);  
    }//GEN-LAST:event_idMouseClicked

    private void fnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnameMouseClicked
     
    }//GEN-LAST:event_fnameMouseClicked

    private void lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnameActionPerformed

    private void fnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnameKeyReleased
        
        String data = fname.getText();
        StringBuilder sb = new StringBuilder(data);
        sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));
        String upper = sb.toString();
        fname.setText(upper);  
     
    }//GEN-LAST:event_fnameKeyReleased

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        
          
    }//GEN-LAST:event_fnameActionPerformed

    private void mnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnameKeyReleased
        String data = mname.getText();
        StringBuilder sb = new StringBuilder(data);
        sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));
        String upper = sb.toString();
        mname.setText(upper);
    }//GEN-LAST:event_mnameKeyReleased

    private void lnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnameKeyReleased
        String data = lname.getText();
        StringBuilder sb = new StringBuilder(data);
        sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));
        String upper = sb.toString();
        lname.setText(upper);
    }//GEN-LAST:event_lnameKeyReleased

    private void addKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addKeyReleased
        String data = add.getText();
        StringBuilder sb = new StringBuilder(data);
        sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));
        String upper = sb.toString();
        add.setText(upper);
    }//GEN-LAST:event_addKeyReleased

    private void sexKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sexKeyReleased
        String data = sex.getText();
        StringBuilder sb = new StringBuilder(data);
        sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));
        String upper = sb.toString();
        sex.setText(upper);
    }//GEN-LAST:event_sexKeyReleased

    private void btnChoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoseActionPerformed
        if (save.getText() == "UPDATE")
        {
           upImg();
        }
        else
        {
            
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon (filename).getImage().getScaledInstance(img.getWidth(),img.getHeight(),Image.SCALE_DEFAULT));
        img.setIcon(imageIcon);

        try
        {
            File image = new File (filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) !=-1;)
            {
                bos.write(buf , 0 ,readNum);

            }
            person_image = bos.toByteArray();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        }
       
    }//GEN-LAST:event_btnChoseActionPerformed

    private void BsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BsearchActionPerformed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
      
        String tmp = (String)combo1.getSelectedItem();
        
        
         if (combo1.getSelectedItem() == "Search By...")
         {
             Bsearch.setText("");
         }
         else
         {
             Bsearch.grabFocus();
             Bsearch.setText("Enter the "+tmp);
             Font f = new Font("Tahoma",Font.ITALIC,14);
             Bsearch.setFont(f);
         }
       
    }//GEN-LAST:event_combo1ActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        final int key = evt.getKeyCode();
        
        if (key == KeyEvent.VK_UP || key == KeyEvent.VK_DOWN
                || key == KeyEvent.VK_LEFT || key == KeyEvent.VK_RIGHT)
        {
          table ();  
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void dateChoserOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChoserOnCommit
        
        DateFormat Fdate = dateChoser.getDateFormat();
        DateFormat r = new SimpleDateFormat("dd/MM/yy", Locale.getDefault());
        
        String s = String.valueOf(dateChoser.getText());
   
            tfBdate.setText(s);
            dateChoser.setEnabled(false);
    }//GEN-LAST:event_dateChoserOnCommit

    private void courKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_courKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_courKeyReleased

    private void courKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_courKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_courKeyTyped

    private void cour1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cour1ActionPerformed
        if (cour1.getSelectedItem() == "Select Course--")
        {
            cour.setText("");
        }
        else
        {   
            if (save.getText().equals("CREATE"))
            {
                img.setText("PHOTO");
                img.setIcon(null);
                String tmp = (String) cour1.getSelectedItem();
                cour.setText(tmp);
                btnChose.setText("CHOOSE PHOTO");
                btnChose.show(); 
            }
            else
            {
             
                String tmp = (String) cour1.getSelectedItem();
                cour.setText(tmp);
            }
               
        }
     
    }//GEN-LAST:event_cour1ActionPerformed

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
       
    }//GEN-LAST:event_addMouseClicked

    private void addFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addFocusGained
    
    }//GEN-LAST:event_addFocusGained

    private void courFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_courFocusGained
        cour1.setEnabled(true);
        cour1.grabFocus();
    }//GEN-LAST:event_courFocusGained

    private void tfBdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfBdateFocusGained
         dateChoser.setEnabled(true);
         dateChoser.grabFocus();
    }//GEN-LAST:event_tfBdateFocusGained

    private void tfNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumKeyTyped
      
    }//GEN-LAST:event_tfNumKeyTyped

    private void tfNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumKeyPressed
  char c = evt.getKeyChar();
        if(!(((c >= '0') && (c <= '9'))
                || (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE))) {
            
             getToolkit().beep();
             JOptionPane.showMessageDialog(null ,"Numbers only!" , "ERROR!" , JOptionPane.INFORMATION_MESSAGE);
             tfNum.grabFocus();
             tfNum.setText("");
               
             //evt.consume();
        }
    }//GEN-LAST:event_tfNumKeyPressed

    private void BsearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BsearchFocusGained
        Bsearch.setText("");
    }//GEN-LAST:event_BsearchFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Flog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bsearch;
    private javax.swing.JTextField add;
    private javax.swing.JTextField ag;
    private javax.swing.JButton btnChose;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JTextField cour;
    private javax.swing.JComboBox<String> cour1;
    private datechooser.beans.DateChooserCombo dateChoser;
    private javax.swing.JButton del;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JTextField fname;
    private javax.swing.JTextField id;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField mname;
    private javax.swing.JButton save;
    private javax.swing.JTextField sex;
    private javax.swing.JLabel text;
    private javax.swing.JTextField tfBdate;
    private javax.swing.JTextField tfNum;
    // End of variables declaration//GEN-END:variables
}
